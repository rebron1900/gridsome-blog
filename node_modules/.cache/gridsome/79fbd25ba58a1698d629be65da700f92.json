{"remainingRequest":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/components/Pager.js","dependencies":[{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/components/Pager.js","mtime":1691048593084},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1691048593101},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1691048593104}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.push.js\";\nimport Link from './Link';\nimport { unslashEnd, stripPageParam } from '../utils/helpers';\n\n// @vue/component\nexport default {\n  functional: true,\n  props: {\n    info: {\n      type: Object,\n      required: true\n    },\n    showLinks: {\n      type: Boolean,\n      default: true\n    },\n    showNavigation: {\n      type: Boolean,\n      default: true\n    },\n    firstLabel: {\n      type: String,\n      default: '«'\n    },\n    firstClass: {\n      type: String,\n      default: ''\n    },\n    prevLabel: {\n      type: String,\n      default: '‹'\n    },\n    prevClass: {\n      type: String,\n      default: ''\n    },\n    nextLabel: {\n      type: String,\n      default: '›'\n    },\n    nextClass: {\n      type: String,\n      default: ''\n    },\n    lastLabel: {\n      type: String,\n      default: '»'\n    },\n    lastClass: {\n      type: String,\n      default: ''\n    },\n    navClass: {\n      type: String,\n      default: ''\n    },\n    linkClass: {\n      type: String,\n      default: ''\n    },\n    range: {\n      type: Number,\n      default: 5\n    },\n    activeLinkClass: {\n      type: String,\n      default: undefined\n    },\n    exactActiveLinkClass: {\n      type: String,\n      default: undefined\n    },\n    // accessibility\n    ariaLabel: {\n      type: String,\n      default: 'Pagination Navigation'\n    },\n    ariaLinkLabel: {\n      type: String,\n      default: 'Go to page %n'\n    },\n    ariaFirstLabel: {\n      type: String,\n      default: 'Go to first page'\n    },\n    ariaCurrentLabel: {\n      type: String,\n      default: 'Current page. Page %n'\n    },\n    ariaPrevLabel: {\n      type: String,\n      default: 'Go to previous page. Page %n'\n    },\n    ariaNextLabel: {\n      type: String,\n      default: 'Go to next page. Page %n'\n    },\n    ariaLastLabel: {\n      type: String,\n      default: 'Go to last page. Page %n'\n    }\n  },\n  render: (h, {\n    props,\n    data,\n    parent\n  }) => {\n    const {\n      info,\n      showLinks,\n      showNavigation,\n      ariaLabel\n    } = props;\n    const {\n      current,\n      total,\n      pages,\n      start,\n      end\n    } = resolveRange(info, props.range);\n    const currentPath = stripPageParam(parent.$route);\n    const renderLink = (page, text = page, ariaLabel = text, linkClass = '') => {\n      if (page === current) ariaLabel = props.ariaCurrentLabel;\n      const linkProps = {\n        to: createPagePath(currentPath, page),\n        exact: true\n      };\n      if (props.activeLinkClass) {\n        linkProps.activeClass = props.activeLinkClass;\n      }\n      if (props.exactActiveLinkClass) {\n        linkProps.exactActiveClass = props.exactActiveLinkClass;\n      }\n      return h(Link, {\n        class: [props.linkClass, linkClass],\n        attrs: {\n          ...linkProps,\n          'aria-label': ariaLabel.replace('%n', page),\n          'aria-current': current === page\n        }\n      }, [text]);\n    };\n    const links = showLinks ? pages.map(page => renderLink(page, page, props.ariaLinkLabel)) : [];\n\n    // render first, prev, next and last links\n    if (showNavigation) {\n      const {\n        firstLabel,\n        prevLabel,\n        nextLabel,\n        lastLabel\n      } = props;\n      const {\n        ariaFirstLabel,\n        ariaPrevLabel,\n        ariaNextLabel,\n        ariaLastLabel\n      } = props;\n      const {\n        firstClass,\n        prevClass,\n        nextClass,\n        lastClass,\n        navClass\n      } = props;\n      if (current > 1) links.unshift(renderLink(current - 1, prevLabel, ariaPrevLabel, [prevClass, navClass]));\n      if (start > 0) links.unshift(renderLink(1, firstLabel, ariaFirstLabel, [firstClass, navClass]));\n      if (current < total) links.push(renderLink(current + 1, nextLabel, ariaNextLabel, [nextClass, navClass]));\n      if (end < total) links.push(renderLink(total, lastLabel, ariaLastLabel, [lastClass, navClass]));\n    }\n    if (links.length < 2) return null;\n    return h('nav', {\n      ...data,\n      attrs: {\n        'role': 'navigation',\n        'aria-label': ariaLabel\n      }\n    }, links);\n  }\n};\nfunction createPagePath(path, page) {\n  const suffix = /\\/$/.test(path) ? '/' : '';\n  return page > 1 ? unslashEnd(path) + `/${page}${suffix}` : path;\n}\nfunction resolveRange({\n  currentPage: current = 1,\n  totalPages: total = 1\n}, range) {\n  const offset = Math.ceil(range / 2);\n  let start = Math.floor(current - offset);\n  let end = Math.floor(current + offset);\n  if (total <= range) {\n    start = 0;\n    end = total;\n  } else if (current <= offset) {\n    start = 0;\n    end = range;\n  } else if (current + offset >= total) {\n    start = total - range;\n    end = total;\n  }\n  const pages = [];\n  for (let page = start + 1; page <= end; page++) {\n    pages.push(page);\n  }\n  return {\n    current,\n    total,\n    start,\n    end,\n    pages\n  };\n}",null]}