{"remainingRequest":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/router.js","dependencies":[{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/router.js","mtime":1691048593084},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1691048593101},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1691048593104}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from '~/.temp/routes.js';\nVue.use(Router);\nconst router = new Router({\n  base: process.env.PUBLIC_PATH,\n  mode: 'history',\n  fallback: false,\n  routes,\n  scrollBehavior(to, from, saved) {\n    if (saved) {\n      return saved;\n    } else if (to.hash) {\n      return {\n        selector: to.hash\n      };\n    } else {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  }\n});\n\n/**\n * Flag custom routes to not fetch GraphQL results or context for them.\n * TODO: This might be unnecessary once static routes are lazy-loaded.\n */\nfunction customRoute(options) {\n  const meta = {\n    ...options.meta,\n    __custom: true\n  };\n  const route = {\n    ...options,\n    meta\n  };\n  if (Array.isArray(options.children)) {\n    route.children = options.children.map(customRoute);\n  }\n  return route;\n}\nconst addRoutes = router.addRoutes;\nrouter.addRoutes = routes => {\n  return addRoutes.call(router, routes.map(customRoute));\n};\nexport default router;",null]}