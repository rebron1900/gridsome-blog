{"remainingRequest":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js??ref--1-1!/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/components/Image.js","dependencies":[{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/gridsome/app/components/Image.js","mtime":1691048593084},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/cache-loader/dist/cjs.js","mtime":1691048593101},{"path":"/home/rebron1900/developer/my-gridsome-site/node_modules/babel-loader/lib/index.js","mtime":1691048593104}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.push.js\";\nimport { stringifyClass } from '../utils/class';\n\n// @vue/component\nexport default {\n  functional: true,\n  props: {\n    src: {\n      type: [Object, String],\n      required: true\n    },\n    width: {\n      type: String,\n      default: ''\n    },\n    height: {\n      type: String,\n      default: ''\n    },\n    quality: {\n      type: String,\n      default: ''\n    },\n    fit: {\n      type: String,\n      default: ''\n    },\n    position: {\n      type: String,\n      default: ''\n    },\n    background: {\n      type: String,\n      default: ''\n    },\n    blur: {\n      type: String,\n      default: ''\n    },\n    immediate: {\n      type: Boolean,\n      default: false\n    },\n    imageWidths: {\n      type: String,\n      default: undefined\n    }\n  },\n  render: (h, {\n    data,\n    props\n  }) => {\n    const classNames = [data.class, 'g-image'];\n    const noscriptClassNames = [data.staticClass, classNames.slice()];\n    const isImmediate = props.immediate;\n    const directives = data.directives || [];\n    const attrs = data.attrs || {};\n    const hook = data.hook || {};\n    const res = [];\n    switch (typeof props.src) {\n      case 'string':\n        attrs.src = props.src;\n        break;\n      case 'object':\n        {\n          const {\n            src,\n            srcset,\n            size,\n            dataUri\n          } = props.src;\n          const isLazy = !isImmediate && dataUri;\n          const sizes = attrs.sizes || props.src.sizes;\n          attrs.src = isLazy ? dataUri : src;\n          attrs.width = size.width;\n          if (isLazy) attrs['data-src'] = src;\n          if (srcset.length) attrs[`${isLazy ? 'data-' : ''}srcset`] = Array.isArray(srcset) ? srcset.join(', ') : srcset;\n          if (sizes) attrs[`${isLazy ? 'data-' : ''}sizes`] = sizes;\n          if (isLazy) {\n            directives.push({\n              name: 'g-image'\n            });\n          }\n          break;\n        }\n    }\n    hook.update = (oldVnode, vnode) => {\n      const {\n        attrs: oldAttrs = {}\n      } = oldVnode.data;\n      const {\n        attrs = {}\n      } = vnode.data;\n      if (attrs['data-src'] && attrs.src !== oldAttrs.src) {\n        // clear srcset and sizes to show the dataUri image\n        vnode.elm.srcset = '';\n        vnode.elm.sizes = '';\n      }\n    };\n    res.push(h('img', {\n      ...data,\n      class: classNames,\n      directives,\n      props,\n      attrs,\n      hook\n    }));\n    if (attrs['data-src']) {\n      classNames.push('g-image--lazy');\n      classNames.push('g-image--loading');\n      noscriptClassNames.push('g-image--loaded');\n\n      // must render as innerHTML to make hydration work\n\n      res.push(h('noscript', {\n        domProps: {\n          innerHTML: `` + `<img src=\"${props.src.src}\" class=\"${stringifyClass(noscriptClassNames)}\"` + (attrs.width ? ` width=\"${attrs.width}\"` : '') + (attrs.alt ? ` alt=\"${attrs.alt}\"` : '') + `>`\n        }\n      }));\n    }\n    return res;\n  }\n};",null]}