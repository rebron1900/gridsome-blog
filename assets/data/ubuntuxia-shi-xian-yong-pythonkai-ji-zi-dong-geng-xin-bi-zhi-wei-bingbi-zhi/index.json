{"hash":"c29e28eb09cebfa4d5785bfac51829c54a26be66","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"63158312cf533d1c2cf29a69","title":"Ubuntu下实现用python开机自动更新壁纸为bing壁纸","content":"<!--kg-card-begin: markdown--><p>因为用的WindowsPhone的手机，里面有一个手机锁屏每天自动更新为bing的壁纸，用着挺好的，遂想在ubuntu下实现这个功能，断断续续折腾了一两个星期，惭愧。不过好在最终还是将所有的功能实现了。主要的功能有开机自动更新，以及手动刷新。图片会自动下载到用户的图片目录下面。</p>\n<p>代码实现：</p>\n<blockquote>\n<h1 id=\"codingutf8\">-<em>- coding: utf-8 -</em>-</h1>\n<h1 id=\"formimplementationgeneratedfromreadinguifilebackgroundcui\">Form implementation generated from reading ui file ‘backGroundC.ui’</h1>\n<h1 id></h1>\n<h1 id=\"createdsatjun211316322014\">Created: Sat Jun 21 13:16:32 2014</h1>\n<h1 id=\"bypyqt4uicodegenerator4104\">by: PyQt4 UI code generator 4.10.4</h1>\n<h1 id></h1>\n<h1 id=\"warningallchangesmadeinthisfilewillbelost\">WARNING! All changes made in this file will be lost!</h1>\n<p>from PyQt4 import QtCore, QtGui<br>\nimport urllib<br>\nimport os<br>\nimport getpass<br>\nfrom xml.etree import ElementTree as ET</p>\n<p>try:<br>\n   _fromUtf8 = QtCore.QString.fromUtf8<br>\nexcept AttributeError:<br>\n   def _fromUtf8(s):<br>\n       return s</p>\n<p>try:<br>\n   _encoding = QtGui.QApplication.UnicodeUTF8<br>\n   def _translate(context, text, disambig):<br>\n       return QtGui.QApplication.translate(context, text, disambig, _encoding)<br>\nexcept AttributeError:<br>\n   def _translate(context, text, disambig):<br>\n       return QtGui.QApplication.translate(context, text, disambig)</p>\n<h1 id=\"url\">定义主URL</h1>\n<p>bingURL = ‘<a href=\"http://cn.bing.com/?ref=1900.live\">http://cn.bing.com</a>’</p>\n<h1 id=\"rssurl\">定义RSSURL</h1>\n<p>rssURL  = ‘<a href=\"http://www.bing.com/HPImageArchive.aspx?format=xml&idx=0&n=8%E2%80%99&ref=1900.live\">http://www.bing.com/HPImageArchive.aspx?format=xml&amp;idx=0&amp;n=8’</a></p>\n<h1 id=\"url\">定义图片地址URL</h1>\n<p>imageURL = ”</p>\n<p>”’<br>\n通过BING的RSS得到DOM对象,获取节点<br>\n后拼接IMAGE路径保存到本地然后调用<br>\nTerminal执行设定BACKGROUND的命令<br>\n”’<br>\ndef updateBack():<br>\n   #获取RSS源<br>\n   root = ET.fromstring( urllib.urlopen( rssURL ).read( ) )<br>\n   #查到最新的一张BING壁纸URL<br>\n   img = root.getiterator (‘image’)[0].find(‘url’).text<br>\n   #获取用户名，用来拼接图片路径<br>\n   user_name = getpass.getuser()<br>\n   #获取图片编号用来当作本地图片的名称<br>\n   name = root.getiterator (‘image’)[0].find(‘fullstartdate’).text<br>\n   #拼接图片<br>\n   imageURL = bingURL + img<br>\n   #下载图片<br>\n   urllib.urlretrieve(imageURL, r’/home/%s/图片/%s.jpg’%( user_name, name))<br>\n   #设置背景<br>\n   os.system(‘gsettings set org.gnome.desktop.background picture-uri &quot;file:///home/qing/图片/%s.jpg&quot;’ % ( name ) )</p>\n<p>class Ui_MainWindow(QtGui.QMainWindow):<br>\n   def setupUi(self, MainWindow):<br>\n       try:<br>\n           #测试是否是开机启动，是的话直接更新背景完成后退出程序<br>\n           sys.argv[1]<br>\n           updateBack()<br>\n           sys.exit()</p>\n<p>except Exception, e:<br>\n           #否则判定为手动启动<br>\n           MainWindow.setObjectName(_fromUtf8(&quot;MainWindow&quot;))<br>\n           MainWindow.resize(297, 130)<br>\n           self.centralwidget = QtGui.QWidget(MainWindow)<br>\n           self.centralwidget.setObjectName(_fromUtf8(&quot;centralwidget&quot;))<br>\n           self.pushButton = QtGui.QPushButton(self.centralwidget)<br>\n           self.pushButton.setGeometry(QtCore.QRect(10, 10, 281, 41))<br>\n           self.pushButton.setContextMenuPolicy(QtCore.Qt.NoContextMenu)<br>\n           self.pushButton.setObjectName(_fromUtf8(&quot;pushButton&quot;))<br>\n           self.pushButton2= QtGui.QPushButton(self.centralwidget)<br>\n           self.pushButton2.setGeometry(QtCore.QRect(10, 60, 281, 41))<br>\n           self.pushButton2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)<br>\n           self.pushButton2.setObjectName(_fromUtf8(&quot;pushButton2&quot;))<br>\n           MainWindow.setCentralWidget(self.centralwidget)<br>\n           self.statusbar = QtGui.QStatusBar(MainWindow)<br>\n           self.statusbar.setObjectName(_fromUtf8(&quot;statusbar&quot;))<br>\n           MainWindow.setStatusBar(self.statusbar)<br>\n           self.retranslateUi(MainWindow)<br>\n           QtCore.QMetaObject.connectSlotsByName(MainWindow)<br>\n           #链接点击事件<br>\n           self.connect( self.pushButton, QtCore.SIGNAL( ‘clicked()’ ), self.OnButtonFrush )<br>\n           self.connect( self.pushButton2, QtCore.SIGNAL( ‘clicked()’ ), self.OnButtonAutoFrush )</p>\n<p>#点击自动更新按钮事件<br>\n   def OnButtonAutoFrush( self ):<br>\n       try:<br>\n           #创建desktop文件放在启动文件夹下<br>\n           file = open(&quot;/home/%s/.config/autostart/autobing.desktop&quot; % (getpass.getuser()) , ‘w’)<br>\n           desktop =  &quot;&quot;&quot;[Desktop Entry]<br>\nVersion=1.0<br>\nEncoding=UTF-8<br>\nName=AutoBing<br>\nType=Application<br>\nExec=python &quot;%s/%s&quot; one<br>\nTerminal=false<br>\nComment=auto change systembackground from bingimage<br>\nNoDisplay=false<br>\nCategories=Utility; &quot;&quot;&quot; % (os.getcwd()  , os.path.basename(<strong>file</strong>))<br>\n           file.write(desktop)<br>\n           file.close()<br>\n           QtGui.QMessageBox.information( self, u’提示’, u’自动更新设置成功\\n如果移动了程序路径请重新设置’)</p>\n<p>except Exception, e:<br>\n           QtGui.QMessageBox.information( self, u’提示’, u”’设置自动更新失败”’)<br>\n           raise e</p>\n<p>#点击刷新桌面壁纸<br>\n   def OnButtonFrush(self):<br>\n       try:<br>\n           updateBack()<br>\n           QtGui.QMessageBox.information( self, u’提示’, u”’BING壁纸更新成功”’)<br>\n           pass<br>\n       except Exception, e:<br>\n           QtGui.QMessageBox.information( self, u’提示’, u”’更新失败”’)<br>\n           raise</p>\n<p>def retranslateUi(self, MainWindow):<br>\n       MainWindow.setWindowTitle(_translate(&quot;MainWindow&quot;, &quot;BING壁纸自动更换&quot;, None))<br>\n       self.pushButton.setText(_translate(&quot;MainWindow&quot;, &quot;手动刷新&quot;, ‘pushButton’))<br>\n       self.pushButton2.setText(_translate(&quot;MainWindow&quot;, &quot;登陆自动刷新&quot;, ‘pushButton2’))</p>\n<p>class BingWindow(QtGui.QMainWindow):  <br>\n   #初始化界面<br>\n   def <strong>init</strong>(self,parent=None):  <br>\n       QtGui.QWidget.<strong>init</strong>(self,parent)  <br>\n       self.madWindow()</p>\n<p>def madWindow(self):  <br>\n       self.ui = Ui_MainWindow()  <br>\n       self.ui.setupUi(self)</p>\n<p>import sys<br>\napp = QtGui.QApplication(sys.argv)  <br>\nmyqq = BingWindow()  <br>\nmyqq.show()<br>\nsys.exit(app.exec_())</p>\n</blockquote>\n<!--kg-card-end: markdown-->","date":"29 June 2014","path":"ubuntuxia-shi-xian-yong-pythonkai-ji-zi-dong-geng-xin-bi-zhi-wei-bingbi-zhi"}},"context":{}}