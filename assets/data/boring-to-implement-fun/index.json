{"hash":"2cbfaa773c414da5c97e6a0cf2cb9fa9d7db58ae","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"63158312cf533d1c2cf29b3c","title":"无聊实现了个好玩的东西","content":"<p>最近总店隔壁的竞争对手的喇叭经常叫唤说给顾客优惠了多少钱之类的，他们那个收银软件和我们用的是同一家公司的，这个叫唤的程序据我跟软件公司的人了解性能很低而且经常读不出来，算是比较鸡肋的功能，他们基本上不安装。</p><p>不过我之前也问过他们有没有其他方案，他们说暂时没有。</p><p>恰好我最近不是换了评论系统twikoo么，这个评论系统有个很有意思功能就是利用webhook在收到评论的第一时间给指定的平台发送消息，twikoo开通了微信和QQ的推送，比传统邮件提醒快很多，效果看下</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202012/pdxjp_2-uyait-3-mikpq-6.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1817\" height=\"1554\"></figure><p>我看了下服务平台上的调用，说是一种叫webhook的功能，有点类似我们以前学C#的时候做web服务。大概思路就是一直监听某个端口的请求，根据收到密钥对消息进行判断，然后再分发给对应的用户。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202012/qi-ye-wei-xin-jie-tu-_16088923812318.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"2880\" height=\"1690\"></figure><p>我当时突发奇想，虽然我改不了我们公司的ERP系统，但是这个系统提供了一个数据库扩展触发器的功能，对应表进行修改的时候就可以触发触发器，那么我是不是可以通过SQL来执行HTTP请求？之前的系统重度，病毒甚至可以通过SQL入侵我的电脑进行任意操作，没道理我发个请求都不行吧？</p><p>一想好就开始百度，没费多少功夫就找到了SQL发送HTTP请求的存储过程，代码如下：</p><pre><code class=\"language-sql\">USE [hydee]\nGO\n\n/****** Object:  StoredProcedure [dbo].[P_GET_HttpRequestData]    Script Date: 12/25/2020 18:38:46 ******/\nSET ANSI_NULLS ON\nGO\n\nSET QUOTED_IDENTIFIER ON\nGO\n\n /*\n参数说明?\n@URL=http请求地址\n@status=状态代?\n@returnText=返回?\n@object=对象令牌\n@errSrc=错误源编?\n*/\nCREATE PROCEDURE [dbo].[P_GET_HttpRequestData](\n@URL varchar(500),\n@status int=0 OUT,\n@returnText varchar(2000)='' OUT\n)\nAS\nBEGIN\nDECLARE @object int,\n@errSrc int\n/*初始化对*/\nEXEC @status = SP_OACreate 'Msxml2.ServerXMLHTTP.3.0', @object OUT\nIF @status &lt;&gt; 0\nBEGIN\n EXEC SP_OAGetErrorInfo @object, @errSrc OUT, @returnText OUT\n RETURN\nEND\n\n/*创建链接*/\nEXEC @status= SP_OAMethod @object,'open',NULL,'GET',@URL\nIF @status &lt;&gt; 0\nBEGIN\n EXEC SP_OAGetErrorInfo @object, @errSrc OUT, @returnText OUT\n RETURN\nEND\nEXEC @status=SP_OAMethod @object,'setRequestHeader','Content-Type','application/x-www-form-urlencoded'\n/*发起请求*/\nEXEC @status= SP_OAMethod @object,'send',NULL\nIF @status &lt;&gt; 0\nBEGIN\n EXEC SP_OAGetErrorInfo @object, @errSrc OUT, @returnText OUT\n RETURN\nEND\nend\nGO\n\n\n</code></pre><p>然后试了一下通过server酱的webhook成功给公司内部群发送了一个通知。。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202012/screenshot_20201224_162902_com-tencent-wework.jpg\" class=\"kg-image\" alt loading=\"lazy\" width=\"1080\" height=\"2340\"></figure><p>之后发现这个转发到企业微信好像要收钱的，所以就没用了，不过思路算是打开了。</p><p>我难道不可以自己写一个么？我也不开放外网就在本地执行。</p><p>今天就百度了一下试着用node.js写了个简陋的服务端，并且调用powershell朗读文字，效果还真不错，朗读虽然机械化了点，但是能分辨数字，也很连贯。</p><p>代码如下，哈哈</p><pre><code class=\"language-javascript\">\nvar http = require('http');\nvar url = require(\"url\");\n//用于执行powershell的库\nconst { exec } = require('child_process');\nconst iconv = require('iconv-lite');\n\nvar config = require('./config.js');\nvar server = http.createServer(function (req, res) {\n    // 接收数据，转换成json对象\n    data = url.parse(req.url,true).query.msg;\n    console.log(data);\n    //拼装朗读文本朗读就行了\n    exec(`powershell.exe Add-Type -AssemblyName System.speech; $speak = New-Object System.Speech.Synthesis.SpeechSynthesizer; $speak.Rate = 1; $speak.Speak([Console]::In.ReadLine()); exit`).stdin.end(iconv.encode(data, 'gbk'));\n\n});\n\n// 时刻监听配置文件里的端口\nserver.listen(config.port);\nconsole.log(\"Server runing at port: \" + config.port + \".\");</code></pre><p>目前本地效果执行还不错，不顾暂时还没实装，得想个办法把这玩意儿弄傻瓜点，挂在自动启动里不用店员们管就是最好的了。</p><p>好了，先这样了。</p>","date":"25 December 2020","path":"boring_to_implement_fun"}},"context":{}}