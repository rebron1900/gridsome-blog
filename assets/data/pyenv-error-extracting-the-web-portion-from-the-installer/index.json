{"hash":"2cbfaa773c414da5c97e6a0cf2cb9fa9d7db58ae","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"638c26588c936a0001bc399e","title":"Pyenv提示error extracting the web portion from the installer处理","content":"<h2 id=\"%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF\">错误信息</h2><p>最近因为需要用Python写个小程序给同事用，但是用pyinstaller打包好后在同事的Win7系统上运行出错，提示如下错误：</p><div class=\"kg-card kg-callout-card kg-callout-card-grey\"><div class=\"kg-callout-emoji\">⚠️</div><div class=\"kg-callout-text\">无法启动此程序，因为计算机中丢失api-ms-win-core-path-1-1-0.dll</div></div><p>缺少DLL一般都是因为没有运行库，我百度查了下资料，有些帖子说是因为没安装运行库，我试着重新安装了所有运行库以及那片帖子提到的库，但是好像并没有什么效果。</p><p>后来 <a href=\"https://cloud.tencent.com/developer/article/1848431?ref=1900.live\">https://cloud.tencent.com/developer/article/1848431</a> 这篇帖子中说到是因为3.8.6以后的Python版本不在支持Win7了，所以需要将Python降级到3.8.6重新打包就能解决这个问题。</p><h2 id=\"pyenv-win\">pyenv-win</h2><p>直接安装肯定会出问题，因为我的电脑中已经安装了 <code>3.11.0</code> ，因为以前了解过nodejs有多版本的环境管理工具，就试着搜索了一下，python也有一款叫 <code>pyenv-win</code> 的win平台版本管理工具。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/pyenv-win/pyenv-win?ref=1900.live\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - pyenv-win/pyenv-win: pyenv for Windows. pyenv is a simple python version management tool. It lets you easily switch between multiple versions of Python. It’s simple, unobtrusive, and follows the UNIX tradition of single-purpose tools that do one thing well.</div><div class=\"kg-bookmark-description\">pyenv for Windows. pyenv is a simple python version management tool. It lets you easily switch between multiple versions of Python. It&amp;#39;s simple, unobtrusive, and follows the UNIX tradition of s...</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.com/fluidicon.png\" alt><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">pyenv-win</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://opengraph.githubassets.com/369eeba4f88716602fbe8c4a43307d6920502a732be0070c3d4b2d86ca2221c0/pyenv-win/pyenv-win\" alt></div></a></figure><h3 id=\"%E9%80%9A%E8%BF%87powershell%E5%AE%89%E8%A3%85\">通过PowerShell安装</h3><p>pyenv可以通过安装包、pip、powershell等多种方式安装。</p><p>其中以powershell的方式最为简单，直接运行下面这个命令即可。</p><pre><code class=\"language-shell\">Invoke-WebRequest -UseBasicParsing -Uri \"https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1\" -OutFile \"./install-pyenv-win.ps1\"; &amp;\"./install-pyenv-win.ps1\"</code></pre><p>如果出错了可能是因为你没有设置远程脚本运行权限，执行下面这个代码后再执行上面的安装命令即可。</p><pre><code class=\"language-shell\">Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine</code></pre><blockquote>参考：<a href=\"https://github.com/pyenv-win/pyenv-win/blob/master/docs/installation.md?ref=1900.live#installation\">https://github.com/pyenv-win/pyenv-win/blob/master/docs/installation.md#installation</a></blockquote><p>pyenv安装后可以通过下面这些命令进行控制，如： <code>pyenv local 3.10.5</code> 、 <code>pyenv install 3.8.6</code> 等等。</p><pre><code>   commands     List all available pyenv commands\n   local        （设置当前目录的python版本，没设置默认使用全局的）\n   global       （设置全局python版本）Set or show the global Python version\n   shell        Set or show the shell-specific Python version\n   install      （安装python版本） \n   uninstall    Uninstall 1 or more versions of Python\n   update       Update the cached version DB\n   rehash       Rehash pyenv shims (run this after switching Python versions)\n   vname        Show the current Python version\n   version      Show the current Python version and its origin\n   version-name Show the current Python version\n   versions     List all Python versions available to pyenv\n   exec         Runs an executable by first preparing PATH so that the selected Python\n   which        Display the full path to an executable\n   whence       List all Python versions that contain the given executable</code></pre><h3 id=\"python%E5%AE%89%E8%A3%85%E9%94%99%E8%AF%AF\">python安装错误</h3><p>不过我在安装好pyenv后发现在使用pyenv install安装python版本时提示下面这个错误，我找遍了全网都没有相关的资料，最后还是自己改了它的安装脚本才得以解决。</p><pre><code>error extracting the web portion from the installer.\ncouldn't install 3.8.6</code></pre><h3 id=\"%E5%88%86%E6%9E%90%E8%A7%A3%E5%86%B3\">分析+解决</h3><p>pyenv是使用一个vbs脚本安装python的（C:\\Users\\me.pyenv\\pyenv-win\\libexec\\pyenv-install.vbs），我看了下脚本的执行流程，如下：</p><ol><li>下载输入的python版本</li><li>将下载下来的文件存入临时文件夹install_cache（在pyenv的安装目录下）</li><li>将安装包解包并移入pyenv目录下的version目录</li><li>..后续其他执行流程</li></ol><p>我检查了pyenv的安装目录，发现install_cache目录下是有文件的，但是version目录下没有文件，程序执行到第三部就出错了，我后来也通过在脚本里添加输出信息测试了出来。</p><p>经过我的测试，程序执行到 <code>If deepExtract Then</code> 便终止了</p><pre><code class=\"language-vscript\">    If Not objfs.FolderExists(cachePath) Then\n        deepExtract = objws.Run(\"\"\"\"&amp; params(IP_InstallFile) &amp;\"\"\" /quiet /layout \"\"\"&amp; cachePath &amp;\"\"\"\", 0, True)\n        If deepExtract Then\n            WScript.Echo \"在这里出错了。\"\n            WScript.Echo \":: [Error] :: error extracting the web portion from the installer.\"\n            Exit Function\n        End If</code></pre><p>结合上下文代码，似乎 <code>deepExtract = objws.Run(\"\"\"\"&amp; params(IP_InstallFile) &amp;\"\"\" /quiet /layout \"\"\"&amp; cachePath &amp;\"\"\"\", 0, True)</code> 在这一段执行结果没有返回预期值，所以提前进入了错误的判断中，并提前调用了 <code>Exit Function</code> 退出了函数。</p><p>所以我尝试注释 <code>Exit Function</code> ，并重新执行安装。</p><p>Good，这次成功运行。</p><h2 id=\"%E5%85%B6%E4%BB%96%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">其他注意事项</h2><ul><li>环境变量里以前设置的路径配置都要删除，不然优先级太高，盖过了pyenv的设置。</li><li>所有的包需要的重新安装。</li></ul><p></p>","date":"4 December 2022","path":"pyenv-error-extracting-the-web-portion-from-the-installer"}},"context":{}}