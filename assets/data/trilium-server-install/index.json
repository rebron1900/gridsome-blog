{"hash":"09771c91682eedafd3ee73b22826856fd274f766","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"63158312cf533d1c2cf29b6c","title":"trilium server服务安装流程","content":"<p>博客圈前段时间一直在讨论笔记应用，先是讨论印象笔记如何如何恶心，开了会员也有广告之类的。后来又讨论到那个笔记好，推荐的可谓五花八门，如mybase、notion之类的。</p><p>我以前没用过这一类的程序，也没搭建过个人知识库系统，但是了解到这个东西后又发现自己其实挺有需求的，最简单的例子就是在执行ubuntu命令的时候有些命令每次都去百度，但是下次又可能需要用上，然后又去百度，但是会查找到很多无效的内容。如果我把查找到的正确的内容收藏起来，下次直接打开不久好了么。</p><p>s所以还是有点心动的，notion之前尝试过国内的抄作业版：wolai，当时用不太懂，也没理解到这类工具的真正用途。这次再打开wolai有点豁然开朗的感觉，notion也很好，但是这类服务数据都是托管在运营商那边，我们并没有完全的把握权限让我有点不安。所以又试了很多工具，如：思源笔记、为知笔记、Obsidian、trilium等等</p><p>最后我选了trilium，我总结了一下选trilium的原因</p><ol><li>开源</li><li>有中文版</li><li>可以使用markdown语法，所见既得</li><li>可以纯本地使用，也可以用docker搭建服务端同步。</li><li>有浏览器收藏工具</li><li>主题定制简单</li><li>更新频繁，提的issue两天内开发者都会跟进。至少后续出问题了不用担心没人管。</li></ol><p>目前使用起来挺舒服的，改了一个主题，也把官方的插件都继承进来了。目前编辑器偶尔会出现打中文会出现有个字母在前面的bug，我用ghost的网页编辑器也会这样，不知道怎么回事。</p><p>这个版本的主题我frok了一份原版的，然后修改了一下night部分的css，如果你喜欢的话可以进行尝试。</p><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/QingShui23/Allure-modify?ref=1900.live\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">GitHub - QingShui23/Allure-modify: A more beautiful and simple theme for trilium</div><div class=\"kg-bookmark-description\">A more beautiful and simple theme for trilium. Contribute to QingShui23/Allure-modify development by creating an account on GitHub.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.com/fluidicon.png\" alt><span class=\"kg-bookmark-author\">GitHub</span><span class=\"kg-bookmark-publisher\">QingShui23</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://opengraph.githubassets.com/1dc28d8a59f6a1935d4e4af55e97c4c806fd37c1e142b06c65ea52f12b2f636e/QingShui23/Allure-modify\" alt></div></a></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202112/image.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"925\" height=\"640\"></figure><blockquote>另外：trilium完全可以不依赖server再本地运行，但是注意不要使用onedrive等第三方同步服务同步数据。因为trilium使用的是数据库，这样会导致数据库损坏。如果你使用过这种方式同步数据，你的原有数据将无法导入trilium server端中，只能新建，或者选择本地打包导出数据再进行导入。</blockquote><h2 id=\"%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B\">安装流程</h2><h3 id=\"%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83\">安装环境</h3><p><code>Ubuntu 18-20</code>，推荐<code>Ubuntu 20.04 LTS</code></p><blockquote>博客圈的均哥之前用<code>centos6.7</code>跟着这教程走连docker都装不上，所以建议还是用新一点的系统。理论上20年的系统版本应该都是没有问题的。</blockquote><h3 id=\"%E5%AE%89%E8%A3%85docker\">安装docker</h3><p>拉取docker镜像</p><pre><code class=\"language-text-plain\">$ curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code></pre><p>配置国内镜像源，并设置docker开机自动启动</p><pre><code class=\"language-text-plain\">$ mkdir -p /etc/docker/\n$ echo \"{'registry-mirrors': ['https://docker.mirrors.ustc.edu.cn']}\" &gt; /etc/docker/daemon.json\n$ systemctl daemon-reload\n$ systemctl start docker\n# 把docker加入开机自启\n$ systemctl enable docker</code></pre><p>其他国内镜像源</p><pre><code class=\"language-text-plain\">网易 http://hub-mirror.c.163.com\nustc https://docker.mirrors.ustc.edu.cn\n中国科技大学 https://docker.mirrors.ustc.edu.cn</code></pre><h3 id=\"%E7%94%B3%E8%AF%B7ssl%E8%AF%81%E4%B9%A6\">申请ssl证书</h3><p>现在有很多平台都可以免费申请ssl证书，因为我的域名备案在腾讯云的，所以我直接在腾讯申请了个免费的ssl证书。</p><p>登录后台，在搜索处搜索SSL，点击【域名与网站】下的【ssl证书】</p><figure class=\"kg-card kg-image-card\"><img src=\"http://127.0.0.1:37840/api/images/ScSfnpcwL9Hf/image.png?Pxoix8Pm3Q\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>点击【我的证书】-&gt; 【申请免费证书】，然后按要求填资料就好了，一般十几分钟就能下来。</p><figure class=\"kg-card kg-image-card\"><img src=\"http://127.0.0.1:37840/api/images/qXz8bDAKagmK/1636337670-1.jpg?jhRhEUvPgM\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>申请完后点列表的下载就可以下载到SSL的证书文件压缩包。</p><p>我们通过sftp工具或者其他的方式把证书压缩包里的nginx目录下的两个【.crt，.key】文件放到服务器上去，并记住存放路径，之后会用到。</p><h3 id=\"%E9%85%8D%E7%BD%AEnginx\">配置nginx</h3><p>我这边nginx的配置文件目录在<code>etc/nginx/conf.d</code>进入该目录，新增一个后缀为<code>conf</code>的nginx配置文件，内容如下：</p><pre><code class=\"language-text-plain\">server {\n    listen              443 ssl;  \n    server_name         #你的绑定的笔记域名;\n    ssl_certificate     #你的证书crt文件地址;  \n    ssl_certificate_key #你的证书key文件地址;\n    ssl_session_cache   shared:SSL:1m;  \n    ssl_session_timeout 5m;  \n    ssl_ciphers         HIGH:!aNULL:!MD5;         \n    ssl_prefer_server_ciphers  on;\n   \n   \n #因为我的主站没有ssl，不知道为什么如果手动输入https访问我的主站会跳转到这里，所以做了处理\n   \n #如果你主站绑定了ssl，可以不用写这一段\n    #location / {\n\t#if ( $host = \"主站域名，不带www\" ){\n   \t\t#return 301 http://$host$request_uri;\n   \t#}\n\t#if ( $host = \"主站域名，带www\" ){\n   \t\t#return 301 http://$host$request_uri;\n   \t#}\n\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_pass http://127.0.0.1:8080;\n        proxy_http_version 1.1;\n    }\n\n\n    location ~ /.well-known {\n        allow all;\n    }\n\n    client_max_body_size 50m;\n}\n</code></pre><p>保存后用<code>sudo nginx -s reload</code>重启nginx服务</p><h3 id=\"%E6%8B%89%E5%8F%96trilium%E4%B8%AD%E6%96%87docker%E9%95%9C%E5%83%8F\">拉取trilium中文docker镜像</h3><p>感谢以下这些作者们，让我们使用到了如此优秀的软件</p><ul><li>原版github地址：https://github.com/zadam/trilium</li><li>汉化版github地址：https://github.com/Nriver/trilium-translation</li></ul><p>拉取镜像（选一条，上面是中文的，下面是原版的）</p><pre><code class=\"language-text-plain\">docker pull nriver/trilium-cn \ndocker pull zadam/trilium:latest</code></pre><p>创建并启动容器</p><pre><code class=\"language-text-plain\">sudo docker run --name tmserver -t -i -p 127.0.0.1:8080:8080 -e TRILIUM_DATA_DIR='/home/node/trilium-data' -v /data/trilium-data:/home/node/trilium-data --restart=always nriver/trilium-cn </code></pre><pre><code class=\"language-text-plain\">参数说明：\n--name 容器名称\n-p 容器映射的ip和端口\n-v 把容器里的trilium文件路径映射到vps上，防止容器停止后数据丢失\n--restart=always 开机自动启动</code></pre><p>现在访问你绑定的域名因该就可以使用了。</p>","date":"18 December 2021","path":"trilium-server-install"}},"context":{}}