{"hash":"79ad4906a93b028ce0cc44a61d77049cbbf31c8d","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"63158312cf533d1c2cf29b8f","title":"通过微信订阅号发送Memos","content":"<h2 id=\"%E7%8E%B0%E5%9C%A8%E7%9A%84memos\">现在的Memos</h2><p>之前有介绍过<a href=\"https://1900.live/build_your_own_flomo_applications/\">Memos</a>这款类flomo的卡片笔记工具，不过那个时候的Memos还是在早期阶段，各方面的功能都有欠缺，如：</p><ul><li>没有本地化，不懂英文的朋友可能会苦手</li><li>不能对上传的图片进行管理，比较容易浪费储存空间</li><li>没有第三方发送渠道，手机上只能通过网页版，略微麻烦</li><li>发送的消息不能更改默认的显示方式（全是不公开的）</li><li>...</li></ul><p>但是经过开发者们一段时间的迭代和社区的扩大，现在已经是 <code>0.4.0</code> 版本现在很多问题都得到了改善，并且已经有配套的微信订阅号后端组件。</p><ul><li>已经做了本地化，现在中文化程度90%左右</li><li>有了专门的资源管理功能</li><li>可以更改Memos的默认可见属性</li><li>...等等其他我没发觉的改进。</li></ul><p>现在的Memos已经初具规模，我个人觉得拿来日常使用已经完全没有问题了，想搭建的朋友可以看我以前的文章。</p><hr><h2 id=\"%E5%BE%AE%E4%BF%A1%E8%AE%A2%E9%98%85%E5%8F%B7%E5%8F%91%E9%80%81memos\">微信订阅号发送Memos</h2><p>今天的重点当然不是说Memos有多好而已，这次想说下发送Memos的第三方手段。</p><p>我们知道Flomo是可以通过很多种渠道发送内容的，之前也Memos的作者提过这个事情，因为微信是平时用的最多、打开频次最高的软件了，如果能通过微信发Memos肯定会变得相当方便。但是他表示早期的Memos版本他们的确实现了通过微信公众号来发送Memos的功能，但是觉得这个功能太鸡肋所以给砍了...，不过他们表示后续如果用户的确有需求的话他们会考虑重新做进来。</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://cdn.1900.live/202208/image_2022-08-26_11-34-48.jpg\" class=\"kg-image\" alt loading=\"lazy\" width=\"1280\" height=\"790\"></figure><p>虽然官方没有，但是——峰回路转。</p><p>这种需求其实不只有我有，今天在TG群发现又有朋友询问如何通过微信来发送Memos，作者这次丢了一个issue出来，就是这个：<a href=\"https://github.com/usememos/memos/discussions/148?ref=1900.live\">https://github.com/usememos/memos/discussions/148</a> ，里面有提到另外一个项目：<a href=\"https://github.com/ZhaoUncle/memos-proxy?ref=1900.live\">Memos-proxy</a> 作者ZhaoUncle通过python实现了一个微信订阅号发送Memos的功能，并配置好了Docker，可以通过很简单的配置即可使用上这个功能，不过作者的安装手册写的稍微有些凌乱，我踩了很多坑才配置好（部分问题是因为我看的不够仔细），所以这里记录一下折腾的过程。</p><div class=\"kg-card kg-callout-card kg-callout-card-blue\"><div class=\"kg-callout-emoji\">👉</div><div class=\"kg-callout-text\">项目地址：<a href=\"https://github.com/ZhaoUncle/memos-proxy?ref=1900.live\">https://github.com/ZhaoUncle/memos-proxy</a></div></div><h3 id=\"%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">注意事项</h3><ul><li>你首先需要搭建好一个Memos，怎么搭建可以看<a href=\"https://1900.live/build_your_own_flomo_applications/\">我的教程</a></li><li>你需要有一个微信公众号（个人的也可以）</li><li>你需要有一个域名</li><li>需要用到域名的80或者443端口。</li><li>你要有一台vps或能挂载docker的服务</li></ul><h3 id=\"%E5%AE%89%E8%A3%85memos-proxy\">安装Memos-Proxy</h3><p>作者打包好了docker，直接拉取，如有定制需要求则更改数据存放路径、端口号即可。</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-ini\">docker run -d -p 5000:5000  -v \"/data/go/memos-proxy/config.ini:/app/config.ini\" --name memos-proxy zhaoweiping/memos-proxy</code></pre><figcaption>docker命令</figcaption></figure><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-yaml\">version: '3'\n\nservices:\n  memos:\n    image: zhaoweiping/memos-proxy:latest \n    container_name: memos-proxy\n    ports:\n      - 5000:5000\n    volumes:\n      - /data/go/memos-proxy/config.ini:/app/config.ini</code></pre><figcaption>docker-compose</figcaption></figure><h3 id=\"%E9%85%8D%E7%BD%AEconfigini\">配置Config.ini</h3><div class=\"kg-card kg-callout-card kg-callout-card-red\"><div class=\"kg-callout-emoji\">⚠️</div><div class=\"kg-callout-text\">配置文件修改后必须 <strong>重启 </strong>docker容器才会生效</div></div><div class=\"kg-card kg-callout-card kg-callout-card-red\"><div class=\"kg-callout-emoji\">⚠️</div><div class=\"kg-callout-text\">docker镜像好像不会自动生成config.ini文件，请手动创建后在重新restart容器</div></div><p>配置文件默认存放在 <code>/data/go/memos-proxy/config.ini</code>  里，内容格式如下，我们根据Memos的数据填写 <code>memos_url</code> 、 <code>memos_openid</code>  、 <code>wechat_token</code> 即可 ：</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-ini\">[prod]\n### 你的memos域名\nmemos_url = https://memos.test.com  \n\n### memos的openid，在Memos&gt;设置&gt;openapi里，复制openid=号之后的字符\nmemos_openid = memos_openid \n\n### 微信公众号文件缓存是否删除，默认删除 yes，不删为no\nfiles_del = yes \n\n### 配置需要部署完之后，用订阅号随便发送一条消息，通过docker logs memos-proxy即可看到日志信息，日志会提示发送消息的用户的微信openid是【】，括号中间的就是用户的微信openid\n### 默认允许所有用户，all表示；\n### 多用户用英文;分隔，不需要有空格，比如：openid1;openid2\nwechat_open_id = \n\n### 微信公众号后台设置的token\nwechat_token = memos\n\n### 执行后的提示语\nmessages_success = memos 写入成功\nmessages_failed = memos 写入失败\n\n### 本地的ip、端口\nflask_host = 0.0.0.0\nflask_port = 5000</code></pre><figcaption>配置文件各项参数说明</figcaption></figure><h3 id=\"%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%90%8E%E5%8F%B0%E8%AE%BE%E7%BD%AE\">微信公众号后台设置</h3><p>登录你的微信公众号，在后台根据以下路径点击左侧的列表菜单进入设置页：</p><pre><code>设置与开发 &gt; 基本配置 &gt; 右侧内容区域：[服务器配置(已启用)] &gt; 修改配置</code></pre><p>这里我踩了个坑，所以说下各个参数要怎么填：</p><ul><li>URL：填写你Memos的域名地址，记得后面要加上 <code>/wecaht</code> ，比如 <code>http://memos.text.com/wechat</code> （我因为没加折腾了很久...）</li><li>Token：填写前文 <code>config.ini</code> 里设置的token值</li><li>EncodingAESKey：使用默认生成的即可。</li></ul><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202208/snipaste_2022-08-26_14-07-39.jpg\" class=\"kg-image\" alt loading=\"lazy\" width=\"868\" height=\"848\"></figure><p>设置完后提交，启用即可。</p><h3 id=\"%E8%AE%BE%E7%BD%AE%E5%BE%AE%E4%BF%A1%E5%8F%91%E9%80%81%E6%9D%83%E9%99%90\">设置微信发送权限</h3><p>默认情况下如果 <code>config.ini</code> 里的 <code>wecaht_openid</code> 为 <code>all</code> 的情况下是所有人都可以通过你的公众号给你的Memos发消息，如下图。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/202208/snipaste_2022-08-26_14-14-46.jpg\" class=\"kg-image\" alt loading=\"lazy\" width=\"750\" height=\"560\"></figure><p>如果你按我的配置文件设置，那么默认情况下你自己是没有发送Memos的权限的。</p><p>这个时候用你的微信号随便给自己的公众号发一条消息，不出意外的情况下系统会自动回复一条消息  <code>该用户没有权限</code> ，这个时候进入你的vps，通过执行命令 <code>sudo docker logs memos-proxy</code> 能得到容器的运行日志，里面会有该发送消息用户的 <code>openid</code> 复制添加到 <code>config.ini</code> 即可，如下图：</p><figure class=\"kg-card kg-gallery-card kg-width-wide kg-card-hascaption\"><div class=\"kg-gallery-container\"><div class=\"kg-gallery-row\"><div class=\"kg-gallery-image\"><img src=\"https://cdn.1900.live/202208/snipaste_2022-08-26_14-19-49.jpg\" width=\"550\" height=\"249\" loading=\"lazy\" alt></div><div class=\"kg-gallery-image\"><img src=\"https://cdn.1900.live/202208/snipaste_2022-08-26_14-16-09.jpg\" width=\"975\" height=\"229\" loading=\"lazy\" alt></div></div></div><figcaption>图1：发送测试消息。 图2：后台通过日志命令获取到程序输出的微信openid</figcaption></figure><h3 id=\"%E7%BB%93%E6%9D%9F%E8%AF%AD\">结束语</h3><p>到这里应该整个配置流程就走完了，在这里感谢<a href=\"https://github.com/boojack?ref=1900.live\">Steve</a>、<a href=\"https://github.com/ZhaoUncle?ref=1900.live\">ZhaoUncle</a> 、以及其他所有贡献开源代码的人。</p><p>我爱开源，开源万岁。</p><p>Enjoy~！❤️❤️❤️</p>","date":"26 August 2022","path":"use-wechat-commit-memos"}},"context":{}}