{"hash":"03d4e26bc6a7202eb1f57b68d71e0c4979a9960b","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"/gridsome-blog"},"post":{"id":"63158312cf533d1c2cf29b36","title":"Godot游戏引擎学习 第二课","content":"<h1 id=\"camera2d\"><strong>Camera2D</strong></h1><p>现在游戏的大概样子已经出来了，但是画面是固定的，虽然人物可以走到画面之外，但是镜头不会跟着移动。</p><p>其实所有几乎所有游戏里都有相机一说，像以前读书的时候很喜欢玩的CS和最近大火的吃鸡PUBG，活着的时候是第一人称只能看到自己人物应该看到的画面，但是死后却可以看队友的视角或者自由移动。这就是镜头的作用，虽然我说的这几款游戏都是3D，只是为了方便理解举的一个例子。</p><p>Godot实现游戏镜头这个功能真的很方便，毕竟是个游戏引擎来的。我们在我们的玩家节点下添加一个<code>Camera2D</code>节点，并且在右侧的设置栏中找到<code>Current</code>把这个新镜头设置为当前镜头即可。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/image-20201220203705847.png\" class=\"kg-image\" alt=\"image-20201220203705847\" loading=\"lazy\"></figure><p>另外这里说几个Camera2D的几个属性</p><ol><li><code>Darg margin H</code>：人物水平移动到i什么位置才移动镜头</li><li><code>Drag Margin V</code>：人物垂直移动到什么位置才移动镜头</li><li><code>Smoothing</code>：效果为平滑移动镜头，属性<code>Speed</code>可以设置镜头平滑移动的速度快慢</li></ol><h2 id=\"-\"><strong>窗口拉伸及画面保持</strong></h2><p>在没设置窗口不允许拉动的情况如果玩家强行拉伸窗口会出现一些原本设计之外的画面，如下图，这是我们不想看到的</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/image-20201220204608624.png\" class=\"kg-image\" alt=\"image-20201220204608624\" loading=\"lazy\"></figure><p>同门可以通过设置<code>项目&gt;项目设置&gt;display&gt;windows</code>的相关属性来控制这个问题</p><ol><li>Resizable：是否允许改变窗口大小</li><li>Stretch&gt;Mode：disabled：关闭，2d：以2d风格拉伸，Viewprot：以视窗进行拉伸。第二和第三效果差不多，具体有什么区别目前还没感受到。</li><li>Aspect：拉伸的面以什么形式展现，ignore：以黑色填充，keep：保持长宽比拉伸，Keep_wight,height:分别只保持宽和高，没保持的部分以黑色填充（感觉这个做手机竖屏游戏可能会用到。）</li></ol><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/image-20201220204756127.png\" class=\"kg-image\" alt=\"image-20201220204756127\" loading=\"lazy\"></figure><h2 id=\"--1\"><strong>视差背景滚动</strong></h2><p>什么是视差？</p><blockquote>视差就是从有一定距离的两个点上观察同一个目标所产生的方向差异。从目标看两个点之间的夹角，叫做这两个点的视差角，两点之间的连线称作基线。只要知道视差角度和基线长度，就可以计算出目标和观测者之间的距离。</blockquote><p>视频作者举了一个很好的例子：月亮和你面前的人，你从你面前的人身前经过的时候感觉瞬间这个人就从你眼界里消失了，但是月亮却似乎一动不动，或者移动了很微小的距离。</p><p>在2D横板游戏中几乎所有的游戏都会利用到这个特性，最近很火的《空洞骑士》，以前我记忆很深刻的《最后一站》近处的人物快速的走动，远处背景上的山、城市缓慢的移动，会有一种很别样的美感。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/timg\" class=\"kg-image\" alt=\"img\" loading=\"lazy\"></figure><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/timg.jpg\" class=\"kg-image\" alt=\"timg\" loading=\"lazy\"></figure><p>那么在Godot上怎么实现这个功能呢？</p><p>我们要用到Godot的<code>ParallaxBackground</code>和<code>ParallaxLayer</code>组件，这两个组件是专门用来实现2D横板游戏视差效果的组件，你只需要把他们放到有<code>Camera2D</code>的节点树他就可以自动实现视差滚动效果，甚至不需要你写任何一点代码。</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/image-20201220214530634.png\" class=\"kg-image\" alt=\"image-20201220214530634\" loading=\"lazy\"></figure><p>我们可以通过设置<code>ParallaxLayer</code>的<code>Motion</code>属性来实现视差滚动效果的呈现</p><ol><li><code>Scale</code>：我的理解大概是图层相对于屏幕有多远，这会影响图片位移的距离，越小位移越小，越大位移越大</li><li><code>Offse</code>：图片相对于<code>ParallaxBackground</code>的偏移量，我测试了一下，不修改<code>ParallaxBackground</code>的<code>Scale</code>大小的情况默认是填满整个视窗的。也就是说这个Offset设置的是图片位于视窗而不是窗口的距离。</li><li><code>Mirroring</code>：设置图片的镜像纹理，也就是自动平铺，设置成图片的宽度即可。</li></ol><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/image-20201220215021021.png\" class=\"kg-image\" alt=\"image-20201220215021021\" loading=\"lazy\"></figure><p>最终实现效果如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn.1900.live/typora/1234.gif\" class=\"kg-image\" alt=\"1234\" loading=\"lazy\"></figure>","date":"20 December 2020","path":"godotyou-xi-yin-qing-xue-xi-di-er-ke"}},"context":{}}