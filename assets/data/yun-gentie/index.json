{"hash":"c29e28eb09cebfa4d5785bfac51829c54a26be66","data":{"metadata":{"siteName":"只是玩玩 | JUST FUN","siteDescription":"Hello"},"post":{"id":"63158312cf533d1c2cf29985","title":"网易云跟帖适配ajax主题，动态加载评论框","content":"<!--kg-card-begin: markdown--><p>2017年3月29日上午：（经测试发现无法评论）。。<br>\n2017年3月29日中午：刷新博客发现早上发的评论居然出来了，网易云跟帖的审核速度未免也太“快”了把？。。<br>\n<strong>总结：还是不要使用该款评论组件。。</strong></p>\n<p>~~自从前几天多说宣布停止服务后我一直在寻找另外一个我喜欢的第三方评论组件，最喜欢的应该是disqus了，主要是因为他的游客评论功能，目前国内除多说外的组件似乎都强制用户登录才可以发表评论。我觉得这就像是我去旅游别人强制我买东西一样蛋疼...</p>\n<p>但是我还是妥协了，我发现国内似乎没有第二个多说这样的组件了，我很遗憾...，后来在这些流氓组件中选来选去最后还是考虑换上了<a href=\"https://gentie.163.com/index.html?ref=1900.live\">网易云跟帖</a>（各种不爽，各种无法自定义...），由于官方没有提供一些文档和接口，导致和我的主题各种水土不服...，当时的心情是崩溃的...，后来没辙，还是得想办法治呀。只得去研究网易的js。</p>\n<h3 id>#分析一下</h3>\n<p>网易提供的代码如下</p>\n<pre><code>&lt;div id=&quot;cloud-tie-wrapper&quot; class=&quot;cloud-tie-wrapper&quot;&gt;&lt;/div&gt;\n&lt;script&gt;\n  var cloudTieConfig = {\n    url: document.location.href, \n    sourceId: &quot;&quot;,\n    productKey: &quot;0a1d8640929c49d3aad1489a8d785e28&quot;,\n    target: &quot;cloud-tie-wrapper&quot;\n  };\n&lt;/script&gt;\n&lt;script src=&quot;https://img1.cache.netease.com/f2e/tie/yun/sdk/loader.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>代码和多说的基本上差不多，</p>\n<ol>\n<li>一个div元素用来放加载的元素，</li>\n<li>一个存放用户信息的json，</li>\n<li>一个引用的加载脚本js文件。</li>\n</ol>\n<p>看了下代码，网易的这个loader.js虽然代码做了混淆，但是不难看出里面其实只有一个主函数，作用就是加载评论的数据，</p>\n<pre><code>!\nfunction(e) {//这是主函数，\n    function t(e, t) {\n        var n = document.createElement(&quot;script&quot;);\n        return n.src = e,\n        n.async = !1,\n        n.charset = &quot;utf-8&quot;,\n        t ? l.appendChild(n) : h.appendChild(n),\n        n\n    }\n//中间代码比较多，就不贴全了\n...\n    var d = /\\.js$/,\n    c = /\\.css$/,\n    h = document.createDocumentFragment(),\n    u = !1,\n    l = document.head || document.getElementsByTagName(&quot;head&quot;)[0];\n    window.yunManualLoad || window.yunModuleEnv || (o() ? r(&quot;aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vbW9iaWxlL2xpdmVzY3JpcHQuaHRtbA==&quot;, !0) : r(&quot;aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vcGMvbGl2ZXNjcmlwdC5odG1s&quot;, !0)),\n    e.Tie = e.Tie || {},\n    e.Tie.loader = r\n} (window);//这里是调用\n</code></pre>\n<h3 id>#改改试试看</h3>\n<p>我抱着试一下的心态，删掉感叹号，并且给主函数加个名字，方便之后调用。</p>\n<pre><code>function yload(e) {//这是主函数，\n    function t(e, t) {\n        var n = document.createElement(&quot;script&quot;);\n        return n.src = e,\n        n.async = !1,\n        n.charset = &quot;utf-8&quot;,\n        t ? l.appendChild(n) : h.appendChild(n),\n        n\n    }\n...\n    var d = /\\.js$/,\n    c = /\\.css$/,\n    h = document.createDocumentFragment(),\n    u = !1,\n    l = document.head || document.getElementsByTagName(&quot;head&quot;)[0];\n    window.yunManualLoad || window.yunModuleEnv || (o() ? r(&quot;aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vbW9iaWxlL2xpdmVzY3JpcHQuaHRtbA==&quot;, !0) : r(&quot;aHR0cHM6Ly9hcGkuZ2VudGllLjE2My5jb20vcGMvbGl2ZXNjcmlwdC5odG1s&quot;, !0)),\n    e.Tie = e.Tie || {},\n    e.Tie.loader = r\n};//这里的加载调用也删掉\n</code></pre>\n<p>然后在在网页的主js里面定义一个配置json</p>\n<pre><code>var cloudTieConfig = {\n    url: document.location.href, //网易云的文章不是通过多说那种id形式，而是直接以url的形式来定义。\n    sourceId: &quot;&quot;,\n    productKey: &quot;0a1d8640929c49d3aad1489a8d785e28&quot;,\n    target: &quot;cloud-tie-wrapper&quot;//用来存放评论元素的容器id\n};\n</code></pre>\n<p>然后在需要的地方调用之前更改好的yload(windows)就可以动态加载评论框了。</p>\n<p>我意外的发现居然能行得通...为了让多朋友知道所以写了这片拙劣的文章，希望能帮到大家</p>\n<h3 id>#要注意的地方</h3>\n<p>但是要注意哦，你定义函数的js文件要比网易云的哪个加载文件后引入哦，不然会找不到配置json的。而且，因为是动态调用的加载函数，所以每次调用前还需要更新<code>cloudTieConfig</code>变量中的url字段；最后调用的情况大概就是下面这个样子了（这里因为发现多次调用的话会重复添加评论框，所以我判断了如果容器里有内容就不会重复加载）</p>\n<pre><code>if ($(&quot;#cloud-tie-wrapper&quot;).html() == &quot;&quot;) {\n    cloudTieConfig.url = document.location.href;//设置当前文章的url\n    yload(window)//调用函数\n};\n</code></pre>\n<p>好了大概就是这样了，以上的内容只能当作参考，我也转业很久没写代码了，有什么解释错误的地方大家可以指出来，我好改正，谢谢。</p>\n<p>Enjoy~~~</p>\n<!--kg-card-end: markdown-->","date":"26 March 2017","path":"yun-gentie"}},"context":{}}